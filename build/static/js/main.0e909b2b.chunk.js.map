{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","personsOperation","getAll","axios","get","then","response","data","create","newObject","post","deletion","id","delete","update","put","Filter","input","handler","value","onChange","placeholder","Notification","message","className","PersonForm","adder","NameValue","NameHandler","NumberValue","NumberHandler","onSubmit","type","Persons","persons","deleteFunction","name","number","onClick","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","searchName","setSearchName","setMessage","setUpdate","error","setError","useEffect","personService","initialPersons","personToShow","filter","person","toLowerCase","includes","event","target","preventDefault","personObject","checkMatchingPerson","some","checkNumberInput","isNaN","window","alert","confirm","matchingPerson","find","updatedPerson","returnedPerson","map","catch","setTimeout","concat","console","log","updated","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e909b2b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n//const baseUrl = \"http://localhost:3001/api/people\";\r\n//const baseUrl = \"https://thawing-garden-45844.herokuapp.com/api/people\";\r\nconst baseUrl = \"/api/people\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst deletion = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst personsOperation = { getAll, create, deletion, update };\r\n\r\nexport default personsOperation;\r\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\n\nconst Filter = ({ input, handler }) => {\n  return (\n    <div>\n      filter shown with:\n      <input value={input} onChange={handler} placeholder=\"search name...\" />\n    </div>\n  );\n};\n\nconst Notification = ({ message, update }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className={update === true ? \"update\" : \"delete\"}>{message}</div>;\n  // } else if (update === true) {\n  //   return <div className=\"update\">{message}</div>;\n  // } else if (deletion === true) {\n  //   return <div className=\"delete\">{message}</div>;\n  // }\n};\n\nconst PersonForm = ({\n  adder,\n  NameValue,\n  NameHandler,\n  NumberValue,\n  NumberHandler,\n}) => {\n  return (\n    <form onSubmit={adder}>\n      <div>\n        name:{\" \"}\n        <input\n          value={NameValue}\n          onChange={NameHandler}\n          placeholder=\"enter new name...\"\n        />\n      </div>\n      <div>\n        number:{\" \"}\n        <input\n          value={NumberValue}\n          onChange={NumberHandler}\n          placeholder=\"enter new number...\"\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst Persons = ({ persons, deleteFunction }) => {\n  return (\n    <>\n      <div>\n        {persons.name} {persons.number}{\" \"}\n        <button onClick={deleteFunction}>delete</button>\n      </div>\n    </>\n  );\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchName, setSearchName] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [update, setUpdate] = useState(null);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => {\n      //console.log(initialPersons);\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const addName = (event) => {\n    event.preventDefault();\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n\n    const checkMatchingPerson = persons.some(\n      (person) => person.name === personObject.name\n    );\n    //console.log(checkMatchingPerson);\n\n    const checkNumberInput =\n      personObject.number === \"\" || isNaN(personObject.number);\n\n    if (checkNumberInput) {\n      window.alert(`please input a valid phone number`);\n    } else if (!checkNumberInput) {\n      if (checkMatchingPerson) {\n        if (\n          window.confirm(\n            `${personObject.name} is already added to phonebook, replcae the old number with a new one?`\n          )\n        ) {\n          const matchingPerson = persons.find(\n            (person) => person.name === personObject.name\n          );\n          const updatedPerson = {\n            ...matchingPerson,\n            number: personObject.number,\n          };\n          personService\n            .update(matchingPerson.id, updatedPerson)\n            .then((returnedPerson) => {\n              //console.log(returnedPerson);\n              setPersons(\n                persons.map((person) =>\n                  person.id !== matchingPerson.id ? person : returnedPerson\n                )\n              );\n            })\n            .catch(() => {\n              setError(true);\n              setMessage(\n                `${matchingPerson.name} was already removed from the server`\n              );\n              setUpdate(false);\n              setTimeout(() => {\n                setMessage(null);\n                setUpdate(null);\n              }, 5000);\n              setPersons(\n                persons.filter((person) => person.id !== matchingPerson.id)\n              );\n            });\n          if (error === false) {\n            setMessage(`${personObject.name}'s number has been changed`);\n            setUpdate(true);\n            setTimeout(() => {\n              setMessage(null);\n              setUpdate(null);\n            }, 5000);\n            //console.log(updatedPerson);\n          }\n        }\n      } else if (!checkMatchingPerson) {\n        //setPersons([...persons, personObject]);\n        //setPersons(persons.concat(personObject));\n\n        // axios\n        //   .post(\"http://localhost:3001/persons\", personObject)\n        //   .then((response) => {\n        //     //console.log(response);\n        //     setPersons(persons.concat(response.data));\n        //     setNewName(\"\");\n        //     setNewNumber(\"\");\n        //   });\n\n        personService\n          .create(personObject)\n          .then((returnedPerson) => {\n            setPersons(persons.concat(returnedPerson));\n            setMessage(`Added ${personObject.name}`);\n            setUpdate(true);\n            setTimeout(() => {\n              setMessage(null);\n              setUpdate(null);\n            }, 5000);\n            setNewName(\"\");\n            setNewNumber(\"\");\n          })\n          .catch((error) => {\n            setError(true);\n            setMessage(`${error.response.data.error.message}`);\n            setTimeout(() => {\n              setMessage(null);\n            }, 5000);\n          });\n      }\n    }\n\n    //setNewName(\"\");\n    //setNewNumber(\"\");\n  };\n\n  const deletePerson = (id) => {\n    console.log(`deleted person with id ${id}`);\n    const person = persons.find((person) => person.id === id);\n    //console.log(person);\n\n    personService.deletion(id).then(() => {\n      //console.log(response);\n      const updated = persons.filter((person) => person.id !== id);\n      //console.log(updated);\n      setPersons(updated);\n      setMessage(`${person.name} has been deleted`);\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    });\n  };\n\n  const handlePersonsName = (event) => {\n    //console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const handlePersonsNumber = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchName = (event) => {\n    setSearchName(event.target.value);\n    //console.log(searchName);\n  };\n\n  const personToShow =\n    searchName === \"\"\n      ? persons\n      : persons.filter((person) =>\n          person.name.toLowerCase().includes(searchName.toLowerCase())\n        );\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={message} update={update} />\n\n      <Filter input={searchName} handler={handleSearchName} />\n\n      <h2>Add a new</h2>\n\n      <PersonForm\n        adder={addName}\n        NameValue={newName}\n        NameHandler={handlePersonsName}\n        NumberValue={newNumber}\n        NumberHandler={handlePersonsNumber}\n      />\n\n      <h2>Numbers</h2>\n\n      {personToShow.map((person) => (\n        <Persons\n          key={person.id}\n          persons={person}\n          deleteFunction={() => {\n            if (window.confirm(`Delete ${person.name} ?`)) {\n              deletePerson(person.id);\n            }\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}